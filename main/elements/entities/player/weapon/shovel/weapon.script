--[[ Locals ]]--
local adjustment = vmath.vector3(0,-6,0)
local sprite1Url = msg.url("main:/hero_collection/weapon#sprite1") -- shovel
local sprite2Url = msg.url("main:/hero_collection/weapon#sprite2") -- hand
local sprite3Url = msg.url("main:/hero_collection/weapon#sprite3") -- hand
local angleOffsetOriginal = .5
local angleOffsetGoal = angleOffsetOriginal
local angleOffset


function init(self)
	angleOffset = angleOffsetOriginal
end

function update(self, dt)
	if _PlayerFacingLeft then
		if _CursorAbove then
			angleOffsetGoal = angleOffsetOriginal
		else
			angleOffsetGoal = -angleOffsetOriginal
		end
	else
		if _CursorAbove then
			angleOffsetGoal = -angleOffsetOriginal
		else
			angleOffsetGoal = angleOffsetOriginal
		end
	end
	angleOffset= vmath.lerp(.2, angleOffset, angleOffsetGoal)

	local flipSprites = false
	if math.abs(_WeaponAngle + angleOffset) < math.pi / 2 then
		flipSprites = true
	end

	if (_WeaponAngle + angleOffset > 0 and _WeaponAngle + angleOffset < math.pi) or _WeaponAngle + angleOffset < -math.pi then
		sprite.set_hflip(sprite2Url, true)
		sprite.set_hflip(sprite3Url, true)
	else
		sprite.set_hflip(sprite2Url, false)
		sprite.set_hflip(sprite3Url, false)
	end
	
	sprite.set_vflip(sprite1Url, flipSprites)
	sprite.set_vflip(sprite2Url, flipSprites)
	sprite.set_vflip(sprite3Url, flipSprites)
	
	go.set_position(vmath.lerp(.4, _WeaponPos, _HeroPos + adjustment))
	_WeaponPos = go.get_position(".")
	
	_WeaponAngle = math.atan2(_MousePos.y + _CamPos.y - _WeaponPos.y, _MousePos.x  + _CamPos.x - _WeaponPos.x)
	_WeaponAngleQuat = vmath.quat_axis_angle(vmath.vector3(0, 0,1), _WeaponAngle - (math.pi))
	offsetQuat = vmath.quat_axis_angle(vmath.vector3(0, 0,1), _WeaponAngle - (math.pi) + angleOffset)
	go.set_rotation(offsetQuat)
end

function on_message(self, message_id, message, sender)
	--[[if message_id == hash("facingLeft") then
		if message.facingLeft == true then
			facingL = true
			--adjustment = vmath.vector3(-5.25,-6,0)
		else
			facingL = false
			--adjustment = vmath.vector3(5.25,-6,0)
		end
	end--]]
	if message_id == hash("attack") then
		attacked = true
		angleOffset= -angleOffset * 12
	end
	if message_id == hash("reflected") then
		propertiesTable = {			
			speedMultiplier = 1,
			lifespanMultiplier = .7
		}
		callback = function()
			bulletProto.newBullet(bulletProto.bulletTypes.bullet_1,  
				go.get(".", "position"), 
				enemyProto.derivativeDirection(enemyProto.randomDirection(), -100, 100),
				200 + enemyProto.randomFloat(-20, 20), 1, 2,
				function()
					print("callback_2")
				end
			)
		end
		weaponProto.reflectBullet( callback, 9, propertiesTable, sender)
	end
end



