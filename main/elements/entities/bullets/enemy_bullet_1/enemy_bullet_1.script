local callback_url = require "modules/callbacks.bullet_1"--AKA bullet_1_callbacks

go.property("direction", vmath.vector3(0,0,0))
go.property("damage", 1)
go.property("speed", 0)
go.property("speed_initial", 0)
go.property("velocity", vmath.vector3(0,0,0))
go.property("lifespan", 0)
go.property("lifespan_initial", 0)
go.property("callback_id", 0)
go.property("reflected", false)
go.property("type", 1)
go.property("collisionHash", hash(""))
go.property("prevPos", vmath.vector3(0))
go.property("attackMousePos", vmath.vector3(0))
go.property("hitUrl", hash(""))

function init(self)
	self.prevPos = go.get(".", "position")
	self.lifespan_initial = self.lifespan
	self.speed_initial = self.speed
	self.velocity = self.direction * self.speed

	if self.reflected then
		sprite.play_flipbook("#sprite", "reflected")
	end
	
end


function update(self, dt)
	local selfPos = go.get_position(".")
	
	if self.collisionHash == hash('walls') then
		go.delete()
	elseif self.collisionHash == hash('hero') then
		msg.post("/overseer#overseerScript", "damageHero", {damage = self.damage})
		go.delete()
	elseif self.collisionHash == hash('enemies') and self.reflected then
		msg.post(self.hitUrl, "bullet_hit", {damage = self.damage})
		go.delete()
	elseif self.collisionHash == hash('weapon') and not self.reflected then
		msg.post("/hero_collection/weapon#script","reflected")
		self.direction = vmath.normalize(vmath.vector3(_AttackMousePos.x + _CamPos.x - _WeaponPos.x, _AttackMousePos.y + _CamPos.y - _WeaponPos.y, 0))
		self.velocity = self.direction * self.speed
		self.reflected = true
		sprite.play_flipbook("#sprite", "reflected")
		self.collisionHash = hash('')
		self.hitUrl = hash('')
	end

	self.prevPos = go.get(".", "position")
	self.lifespan = self.lifespan - dt
	if self.lifespan <= 0 then
		if bullet_1_callbacks[self.callback_id] then
			bullet_1_callbacks[self.callback_id]()
		end
		go.delete()
	else
		go.set(".", "position", selfPos + self.velocity * dt)
	end
	physics.ray_cast( go.get(".", "position"), go.get(".", "position") + self.velocity * dt, {hash("hero"), hash("walls")}, 1)
	--msg.post("@render:", "draw_line", {start_point = go.get(".", "position"), end_point = go.get(".", "position") + self.velocity * dt, color = vmath.vector4(0,1,0,1)})
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") or message_id == hash("ray_cast_response") then
		if self.collisionHash == hash("") and 
		not (not self.reflected and message.group == hash("enemies")) and 
		not (self.reflected and (message.group == hash("hero") or message.group == hash("weapon"))) then
			self.collisionHash = message.group
			self.hitUrl = message.other_id
		end
	elseif message_id == hash('weaponReflect') then
		if message.speed then
			self.speed  = message.speed
			self.speed_initial = self.speed
		end
		if message.speedMultiplier then
			self.speed = self.speed_initial * message.speedMultiplier 
			self.speed_initial = self.speed
		end
		if message.lifespan then
			self.lifespan = message.lifespan
			self.lifespan_initial = self.lifespan
		end
		if message.lifespanMultiplier then
			self.lifespan = self.lifespan_initial * message.lifespanMultiplier
			self.lifespan_initial = self.lifespan
		end
		if message.callback_id then
			self.callback_id = message.callback_id	
		end
	end
end
